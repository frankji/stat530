install.packages('ggplot2')
rand(1)
round(runif(n = 1,min = 0,max = 100))
round(runif(n = 1,min = 0,max = 100))
round(runif(n = 1,min = 0,max = 100))
round(runif(n = 1,min = 0,max = 100))
round(runif(n = 1,min = 0,max = 100))
round(runif(n = 1,min = 1,max = 5))
read.table('/Users/Frank/Project/Corey_4/gracerosetta/pdb/RMSD.dat',sep=' ')
RMSD<-read.table('/Users/Frank/Project/Corey_4/gracerosetta/pdb/RMSD.dat',sep=' ')
RMSD_plot<-ggplot(RMSD)+geom_line(aes(x=V1,y=V3))
library('ggplot2')
library('gplots')
install.packages("ggplot2")
Year<-1975+seq(1,5)*5
Year
Year<-c(1980,1985,1990,2000,2005)
Boxoffice<-c(60,50,35,25,20)
TV<-100-Boxoffice
dat<-data.frame(Year,Boxoffice,TV)
data
data
dat
library('ggplot')
library('ggplot2')
ggplot(dat)+geom_bar(position='dodge',aes(x=Year,y=Boxoffice))
ggplot(dat)+geom_bar(position='identity',aes(x=Year,y=Boxoffice))
?geom_bar
ggplot(dat)+geom_bar(stat='identity',aes(x=Year,y=Boxoffice))
library('ggplot2')
Year<-c('1980','1985','1990','2000','2005')
Boxoffice<-c(60,50,35,25,20)
TV<-100-Boxoffice
dat<-data.frame(Year,Boxoffice,TV)
ggplot(dat)+geom_bar(stat='identity',aes(x=Year,y=Boxoffice))
library("scales", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
choose(44,10)
choose(10, 6)*choose(34, 2)/choose(44,8)
library('swirl')
swril()
swirl()
myplot(2)
myplot(20)
myplot2()
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(f1)
range(g1)
range(g2)
difference<-g1-g2
difference <- g2-g1
mean(difference)
s<-sd(difference)
mn+c(-1,1)*qt(0.975,9)*s
mn+c(-1,1)*qt(0.975,9)*s/sqrt(10)
t.test(x = difference)$conf.int
(8-1)*15.34^2+(21-1)*18.23^2
7*15.34^2+20*18.23^2
sp<-7*15.34^2+20*18.23^2
7+20
8+21-2
ns<-8+21-2
sp<-sqrt(sp/ns)
132.86-127.44+c(-1,1)*sp*sqrt(1/8+1/21)
132.86-127.44+qt(0.975,ns)*c(-1,1)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
sqrt((9*var(g1)+9*var(g2))/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*t(0.975,18)*sp*(sqrt(1/10+1/10))
md+c(-1,1)*qt(0.975,18)*sp*(sqrt(1/10+1/10))
md+c(-1,1)*qt(0.975,18)*sp*(sqrt(1/5))
md+c(-1,1)*qt(0.975,18)*sp*sqrt(1/5)
t.test(g2-g1,var.equal = TRUE, paired = FALSE)$conf.
t.test(g2,g1,var.equal = TRUE, paired = FALSE)$conf.
t.test(g2,g1,paired=FALSE, var.equal = TRUE)$conf.
t.test(g2,g1,paired=FALSE, var.equal = TRUE)$conf
t.test(g2,g1,paired=TRUE, var.equal = TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
15.34^2/8+18.23^2/21
(15.34^2/8+18.23^2/21)^2
num<-(15.34^2/8+18.23^2/21)^2
den<-15.34^4/8^2/7+18.23^4/21^2/20
num/den
mydf<-num/den
18.23-15.34+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
132.86-127.44+c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
1
2/1
1
(32-30)/(10/4)
15
qt(.95,15)
dim(fs)
t.test(fs)
t.test(fs$fheight-fs$sheight)
sd(fs$sheight-fs$fheight)/sqrt(1078)
11.7885*sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
pt(q=2.5, df=15, lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6, size = 8, prob = .5, lower.tail = flase)
pbinom(6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(7,size = 8)
pbinom(7,size = 8, prob=.5)
ppois(9, 0.1, lower.tail = FALSE)
ppois(9, 5, lower.tail = FALSE)
qt(p = .975, df = 8)
2.306004*30
qt(p = .95, df = 8)
2/1.859548
1.07553*sqrt(8)
1.07553*sqrt(9)
qt(p=.975, df=8)
2/2.30*3
?t.test
sqrt((9*0.68+9*0.60)/18)/sqrt(1/10+1/10)
sqrt((9*0.68+9*0.60)/18)/sqrt(1/10+1/10)*qt(.95,df = 18)
sqrt((9*0.68+9*0.60)/18)/sqrt(1/10+1/10)*qt(.95,df = 18)
sqrt((9*0.68+9*0.60)/18)*sqrt(1/10+1/10)*qt(.95,df = 18)
sqrt((9*0.68+9*0.60)/18)*sqrt(1/10+1/10)*qt(.975,df = 18)
sqrt(0.5/100+2/100)
qnorm(0.975)
qnorm(0.975)*sqrt(0.5/100+2/100)
qnorm(0.975)*sqrt(0.5^2/100+2^2/100)
sqrt((1.5^2*8+1.8^2*8)/16)
sqrt((1.5^2*8+1.8^2*8)/16)*sqrt(1/9+1/9)
sqrt((1.5^2*8+1.8^2*8)/16)*sqrt(1/9+1/9)*qnorm(.95)
sqrt((1.5^2*8+1.8^2*8)/16)*sqrt(1/9+1/9)*qt(.95, df = 16)
-4+1.363579
source("https://bioconductor.org/biocLite.R")
biocLite("STRINGdb")
library('STRINGdb')
STRINGdb
string_db<-STRINGdb()
string_db$get_interactions('ABAT')
?STRINGdb$new
STRINGdb$help('new')
string_db <- STRINGdb$new( version="10", species=9606,
+ score_threshold=0, input_directory="" )
string_db <- STRINGdb$new( version="10", species=9606,
score_threshold=0, input_directory="" )
string_db$get_interactions('ABAT')
string_db$get_interactions(abat)
string_db$get_interactions(c(abat,)
)
abat = string_db$mp( "ABAT" )
abat
string_db$get_interactions(abat)
abca10 = string_db$mp( "ABCA10" )
abca10
string_db$get_interactions(c(abat,abca10))
tp53 = string_db$mp( "tp53" )
atm = string_db$mp( "atm" )
string_db$get_interactions( c(tp53, atm) )
string_db$get_interactions( c(tp53, atm) )
string_proteins <- string_db$get_proteins()
string_proteins
dim(string_proteins)
string_db$get_interactions(string_proteins)
string_proteins$protein_external_id('9606.ENSP00000000233')
STRINGdb$help("map")
id_map<-read.csv('~/Downloads/entrez_gene_id.vs.string.v10.28042015.tsv', header=TRUE, stringsAsFactors = FALSE)
View(id_map)
id_map<-read.csv('~/Downloads/entrez_gene_id.vs.string.v10.28042015.tsv', header=TRUE, stringsAsFactors = FALSE, sep = '\t')
g_symbol<-getSYMBOL(id_map$X.Entrez_Gene_ID, data='org.Hs.eg')
library(org.Hs.eg.db)
library(annotate)
g_symbol<-getSYMBOL(id_map$X.Entrez_Gene_ID, data='org.Hs.eg')
biocLite('annotate')
library(annotate)
g_symbol<-getSYMBOL(id_map$X.Entrez_Gene_ID, data='org.Hs.eg')
?getSYMBOL
id_map$X.Entrez_Gene_ID
g_symbol<-getSYMBOL(id_map$X.Entrez_Gene_ID, data='org.Hs.eg')
getSYMBOL(c('3815', '3816', '2341'), data='org.Hs.eg')
g_symbol<-getSYMBOL(as.character(id_map$X.Entrez_Gene_ID), data='org.Hs.eg')
g_symbol
class(g_symbol)
g_symbol[1]
g_symbol[2]
g_symbol[3]
as.character(g_symbol[3])
as.character(g_symbol)
g_symbol<-getSYMBOL(as.character(id_map$X.Entrez_Gene_ID), data='org.Hs.eg')
g_symbol
which(g_symbol==NA)
which(g_symbol=='NA')
which(is.na(g_symbol))
g_symbol<-getSYMBOL('244', data='org.Hs.eg')
g_symbol
lookUp(244, 'org.Hs.eg', 'SYMBOL')
lookUp('244', 'org.Hs.eg', 'SYMBOL')
lookUp('2', 'org.Hs.eg', 'SYMBOL')
install.packages("~/Downloads/GSEA.tgz", repos = NULL, type = .Platform$pkgType)
biocLite("GSEABase")
source("https://bioconductor.org/biocLite.R")
biocLite("GSEABase")
library(GSEABase)
source("https://bioconductor.org/biocLite.R")
biocLite("EGSEA")
setwd('/Users/Frank/Courses/stat530/week1/Hoops/')
x <- scan("cbblog12.html", what="", sep="\n")
length(x)
# First bit of cleaning:
x <- gsub("&#160;", "", x, fixed=TRUE)
x <- gsub("</span>", ",", x, fixed=TRUE)
x <- gsub("<[^<>]*>", "", x)
y <- strsplit(x, ",")
# Sanity check:
table(sapply(y, length))
# More data reduction, tightening the focus:
z <- y[sapply(y, length)==7]
zz <- matrix(unlist(z), ncol=7, byrow=TRUE)
# We're in the home stretch:
scores <- strsplit(zz[,5], "-")
table(sapply(scores, length))
scores <- matrix(as.numeric(unlist(scores)), ncol=2, byrow=TRUE)
ps <- gsub("'", ".5", zz[,4])
ps <- gsub("P", 0, ps)
x <- data.frame(pointspread=as.numeric(ps),
score1=scores[,1], score2=scores[,2],
scorediff=scores[,2]-scores[,1],
loc=zz[,6],
stringsAsFactors=FALSE)
plot(x$pointspread, x$scorediff,
xlab="Pre-Game Point Spread",
ylab="Actual Game Score Differential")
abline(0, 1)
x <- read.csv("1995.csv", as.is=TRUE)
dim(x)                    # How big is this data set?
names(x)                  # What are the variable names?
table(x$UniqueCarrier)    # A one-way contingency table of the carriers
x
setwd('/Users/Frank/Courses/stat530/')
x <- read.csv("1995.csv", as.is=TRUE)
dim(x)                    # How big is this data set?
names(x)                  # What are the variable names?
table(x$UniqueCarrier)    # A one-way contingency table of the carriers
setwd('/Users/Frank/Courses/stat530/week1/FlightDelays/')
x <- read.csv("1995.csv", as.is=TRUE)
x <- read.csv("UA1995.csv", as.is=TRUE)
dim(x)
names(x)
x$DepDelay
85/(85+890)
