mice.box<-ggplot(data = x)+geom_boxplot(aes(x = factor(GROUP), y = ZINC,
fill = factor(GROUP)), size=1)
# Add the label and change the theme.
mice.box<-mice.box+stat_boxplot(geom = 'errorbar')+xlab('GROUP')+
theme_classic()+theme(text = element_text(size=25))+guides(fill=FALSE)
mice.box
mice.box<-ggplot(data = x)+stat_boxplot(geom = 'errorbar')+
geom_boxplot(aes(x = factor(GROUP), y = ZINC,
fill = factor(GROUP)), size=1)
# Add the label and change the theme.
mice.box<-mice.box+xlab('GROUP')+
theme_classic()+theme(text = element_text(size=25))+guides(fill=FALSE)
mice.box
mice.box<-ggplot(data = x, aes(x = factor(GROUP), y = ZINC))+
stat_boxplot(geom = 'errorbar')+
geom_boxplot(aes(fill = factor(GROUP)), size=1)
# Add the label and change the theme.
mice.box<-mice.box+xlab('GROUP')+
theme_classic()+theme(text = element_text(size=25))+guides(fill=FALSE)
mice.box
?stat_boxplot
mice.box<-ggplot(data = x, aes(x = factor(GROUP), y = ZINC))+
stat_boxplot(geom = 'errorbar', stat_params = list(width = 0.5))+
geom_boxplot(aes(fill = factor(GROUP)), size=1)
# Add the label and change the theme.
mice.box<-mice.box+xlab('GROUP')+
theme_classic()+theme(text = element_text(size=25))+guides(fill=FALSE)
mice.box<-ggplot(data = x, aes(x = factor(GROUP), y = ZINC))+
stat_boxplot(geom = 'errorbar', width = 0.5)+
geom_boxplot(aes(fill = factor(GROUP)), size=1)
# Add the label and change the theme.
mice.box<-mice.box+xlab('GROUP')+
theme_classic()+theme(text = element_text(size=25))+guides(fill=FALSE)
mice.box
mice.box<-ggplot(data = x, aes(x = factor(GROUP), y = ZINC))+
stat_boxplot(geom = 'errorbar', width = 0.3)+
geom_boxplot(aes(fill = factor(GROUP)), size=1)
# Add the label and change the theme.
mice.box<-mice.box+xlab('GROUP')+
theme_classic()+theme(text = element_text(size=25))+guides(fill=FALSE)
mice.box
plot(x$ZINC[x$GROUP=="A"], x$ZINC[x$GROUP=="B"])
x$GROUP=="A"
which(x$GROUP=='A')
length(which(x$GROUP=='A'))
install.packages("rmarkdown")
score<-read.csv(file = 'gene-score.csv', header = TRUE)
score
dim(score)
head(score)
x <- read.csv("Zinc.csv", as.is=TRUE)  # Run this line without an error
?boxplot
head(x)
boxplot(decrease ~ treatment, data = OrchardSprays,
log = "y", col = "bisque")
boxplot(ZINC ~ GROUP, data = x, notch = TRUE, col = 'brown1')
boxplot(ZINC ~ GROUP, data = x, col = 'brown1')
boxplot(ZINC ~ GROUP, data = x, col = 'brown1',
xlab = 'Group', ylab = 'Zinc')
?boxplot
?AXIS
?axis
boxplot(ZINC ~ GROUP, data = x, col = 'brown1',
xlab = 'Group', ylab = 'Zinc')
axis(lwd = 2, lty = 1)
boxplot(ZINC ~ GROUP, data = x, col = 'brown1',
xlab = 'Group', ylab = 'Zinc')
axis(1, lwd = 2, lty = 1)
boxplot(ZINC ~ GROUP, data = x, col = 'brown1',
xlab = 'Group', ylab = 'Zinc')
axis(2, lwd = 2, lty = 1)
boxplot(ZINC ~ GROUP, data = x, col = 'brown1',
xlab = 'Group', ylab = 'Zinc')
axis(2, lwd = 3, lty = 1)
axis(2, lwd = 3, lty = 1)
axis(1, lwd = 3, lty = 1)
axis(1, lwd = 5, lty = 1)
boxplot(ZINC ~ GROUP, data = x, col = 'brown1',
xlab = 'Group', ylab = 'Zinc')
axis(2, lwd = 5, lty = 1)
?par
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc')
axis(2, lwd = 1, lty = 1)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc')
ylim(1.0, 2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,2))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8))
axis(1)
axis(1, lwd=1)
axis(1, lwd=2)
axis(1, lwd=2, labels = factor(x$GROUP))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8))
axis(1, lwd=2, labels = factor(x$GROUP))
axis(1, lwd=2, labels = c('A', 'B'))
axis(1, lwd=2, labels = FALSE)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8))
?axis
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.5)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1.2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1.3)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.4, cex.axis=1.3)
par(mgp=c(axis.label.position, axis.line.position))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, mgp=c(1,0.3))
?par
par(mgp=c(axis.title.position, axis.label.position, axis.line.position))
?par
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, mgp=c(1,0.3))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, mgp=c(0,0.3))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, mgp=c(5,0.3))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, mgp=c(1,0, 0.3))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, mgp=c(1,0,3))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, mgp=c(1,0,3))
par(mgp)
par('mgp')
par(mgp = c(2, 1, .4))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(3, 1, .2))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(3, 1.2, .2))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(3, 1, .5))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(3, 0, 0))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(3, 1, 0))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(1, 1, 0))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(2, 1, 0))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(2, 1, 0))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, font=2)
par(mgp = c(2, 1, 0))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, font=3)
par(mgp = c(2, 1, 0))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, font.axis=3)
par(mgp = c(2, 1, 0))
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, font.lab=3)
par(mgp = c(2, 1, 0), font.lab=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, font.lab=3)
par(mgp = c(2, 1, 0), font.axis=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
?par
par(mgp = c(2, 1, 0), font.axis=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1, yaxs=1)
par(mgp = c(2, 1, 0), font.axis=2, yaxs=1)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
par(mgp = c(2, 1, 0), font.axis=2, yaxs=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
axis(1, lwd=2)
par(mgp = c(2, 1, 0), font.axis=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
axis(1, lwd=2, labels=FALSE)
axis(2, lwd=2)
par(mgp = c(2, 1, 0), font.axis=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
axis(1, lwd=2, at = 1.2, at = 1.6, labels=FALSE)
axis(2, lwd=2)
par(mgp = c(2, 1, 0), font.axis=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
axis(1, lwd=2, at = c(1.2, 1.6), labels=FALSE)
axis(2, lwd=2)
par(mgp = c(2, 1, 0), font.axis=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
axis(1, lwd=2, at = c(1, 3), labels=FALSE)
axis(2, lwd=2)
par(mgp = c(2, 1, 0), font.axis=2)
boxplot(ZINC ~ GROUP, data = x, col = c('brown1', 'cyan3'),
xlab = 'Group', ylab = 'Zinc', ylim = c(1,1.8),
cex.lab=1.2, cex.axis=1)
axis(1, lwd=2, at = c(1, 2), labels=FALSE)
axis(2, lwd=2)
load('/Users/Frank/Project/hongyu/rotation/gene_exp.rda')
gene_exp[[1]]
dim(gene_exp[[1]])
names(gene_exp)
View(gene_exp[[1]])
length(gene_exp)
write.csv2(gene_exp[[1]], file= 'SCAP_exp.csv',col.names = TRUE)
write.csv2(gene_exp[[1]], file= 'SCAP_exp.csv',row.names = FALSE)
write.csv2(gene_exp[[1]], file= 'SCAP_exp.csv',row.names = FALSE, sep = ',')
write.table(gene_exp[[1]], file= 'SCAP_exp.csv',row.names = FALSE, sep = ',')
SCAP<-read.csv(file = 'SCAP_exp.csv', as.is = TRUE)
View(SCAP)
hist(SCAP)
as.vector(SCAP)
as.vector(SCAP)
as.vector(as.matrix(SCAP))
hist(as.vector(as.matrix(SCAP)))
hist(as.vector(as.matrix(SCAP)), xlab = 'Exp')
hist(as.vector(as.matrix(SCAP)), xlab = 'Expression Level')
?hist
SCAP<-read.csv(file = 'SCAP_exp.csv', as.is = TRUE)
hist(as.vector(as.matrix(SCAP)), xlab = 'Expression Level', breaks=30)
SCAP<-read.csv(file = 'SCAP_exp.csv', as.is = TRUE)
hist(as.vector(as.matrix(SCAP)), xlab = 'Expression Level',
breaks=30, title='Histrogram of Exp')
SCAP<-read.csv(file = 'SCAP_exp.csv', as.is = TRUE)
hist(as.vector(as.matrix(SCAP)), xlab = 'Expression Level',
breaks=30)
title(main = 'Histogram of Exp')
?hist
hist(as.vector(as.matrix(SCAP)), xlab = 'Expression Level',
breaks=30, main = 'Histogram of Exp')
dim(SCAP)
names(SCAP)
table(SCAP)
summary(SCAP)
apply(SCAP,1,mean)
dim(SCAP)
apply(SCAP,2,mean)
hist(apply(SCAP,2,mean))
apply(SCAP,1,mean)
hist(apply(SCAP,1,mean))
hist(apply(SCAP,2,mean))
plot(x = 1:13, y = apply(SCAP,1,mean))
heatmap(SCAP)
heatmap(as.matrix(SCAP))
as.matrix(SCAP)
heatmap(as.matrix(SCAP))
heatmap(as.matrix(SCAP), Rowv = FALSE)
?heatmap
heatmap(as.matrix(SCAP), Colv  = FALSE)
heatmap(as.matrix(SCAP), Rowv  = FALSE)
heatmap(as.matrix(SCAP))
v <- heatmap(x, col = cm.colors(256), scale = "column",
RowSideColors = rc, ColSideColors = cc, margins = c(5,10),
xlab = "specification variables", ylab =  "Car Models",
main = "heatmap(<Mtcars data>, ..., scale = \"column\")")
x  <- as.matrix(mtcars)
rc <- rainbow(nrow(x), start = 0, end = .3)
cc <- rainbow(ncol(x), start = 0, end = .3)
hv <- heatmap(x, col = cm.colors(256), scale = "column",
RowSideColors = rc, ColSideColors = cc, margins = c(5,10),
xlab = "specification variables", ylab =  "Car Models",
main = "heatmap(<Mtcars data>, ..., scale = \"column\")")
utils::str(hv) # the two re-ordering index vectors
heatmap(Ca, Rowv = FALSE, symm = TRUE, RowSideColors = cc, ColSideColors = cc,
margins = c(6,6))
round(Ca <- cor(attitude), 2)
symnum(Ca) # simple graphic
heatmap(Ca,               symm = TRUE, margins = c(6,6)) # with reorder()
heatmap(Ca, Rowv = FALSE, symm = TRUE, margins = c(6,6)) # _NO_ reorder()
## slightly artificial with color bar, without and with ordering:
cc <- rainbow(nrow(Ca))
heatmap(Ca, Rowv = FALSE, symm = TRUE, RowSideColors = cc, ColSideColors = cc,
margins = c(6,6))
heatmap(as.matrix(SCAP), Rowv  = NA)
apply(SCAP, 2, mean)
summary(SCAP)
summary(SCAP)
x<-summary(SCAP)
x[3,]
x[4,]
?boxplot()
boxplot(SCAP,use.cols=TRUE)
boxplot(SCAP,use.cols=TRUE, lsa=1)
boxplot(SCAP,use.cols=TRUE, lsa=2)
?boxplot
par(las = 2)
boxplot(SCAP, use.cols=TRUE)
sum_SCAP<-summary(SCAP)
sum_SCAP[1,]
sum_SCAP[3,]
sum_SCAP[4,]
mean_SCAP<-sum_SCAP[4,]
mean_SCAP
mean_SCAP[1]
mean_SCAP[2]
mean_SCAP[3]
mean_SCAP<-as.numeric(gsub('[^0-9\\.]', '', sum_SCAP[4,]))
mean_SCAP
var_SCAP<-apply(SCAP,2,var)
var_SCAP
sd()
apply(SCAP, 2, function(x) (x-mean(x)/sd(x)))
mean(SCAP[,1])
SCAP[,1]-mean(SCAP[,1])
sd(SCAP[,1])
(SCAP[,1]-mean(SCAP[,1]))/sd(SCAP[,1])
apply(SCAP, 2, function(x) ((x-mean(x))/sd(x)))
heatmap(as.matrix(SCAP), Rowv  = NA)
heatmap(apply(SCAP, 2, function(x) ((x-mean(x))/sd(x))), Rowv  = NA)
table(SCAP)
var_SCAP
?aov
npk
data1 <- read.table(text="   base    0   1   2   3   4   5   6   7   8
707 1   1389    430 493.6   0.3096  0.3554  525.47  0.3783  170.29  0.1226
708 4   1392    440 472.8   0.3161  0.3397  669.32  0.4808  197.07  0.1416
709 9   1403    437 487.4   0.3115  0.3474  581.1   0.4142  174.45  0.1243
710 49  1469    476 658.1   0.324   0.448   378.88  0.2579  123.59  0.0841
711 4   1428    435 513.5   0.3046  0.3596  503.33  0.3525  151.95  0.1064
",  header=T, row.names=1)
data1
data1[,1]
data1[,2]
data1[,3]
npk
npk.aov <- aov(yield ~ block + N*P*K, npk)
npk.aov
summary(npk.aov)
aov(SCAP)
aov(data=SCAP)
aov(~data=SCAP)
aov(~.,data=SCAP)
apply(x,1,function(x)[,1])
apply(SCAP,1,function(x) x[,1])
apply(SCAP,1,function(x) x[1])
SCAP
apply(x, 1, function(x) c(rowname(SCAP)[1],
colnames(SCAP)[1],
(x[,1])))
apply(x, 1, function(x) c(rownames(SCAP)[1],
colnames(SCAP)[1],
(x[,1])))
apply(x, 1, function(x) c(rownames(SCAP)[1],
colnames(SCAP)[1],
(x[1])))
apply(SCAP, 1, function(x) c(rownames(SCAP)[1],
colnames(SCAP)[1],
(x[1])))
apply(SCAP, 2, function(x) c(rownames(SCAP)[1],
colnames(SCAP)[1],
(x[1])))
apply(SCAP, 1, function(x) c(rownames(SCAP)[1],
colnames(SCAP)[1],
(x[1])))
View(SCAP)
apply(X, 1, function(x) c(rownames(SCAP)[2],
(x[2])))
apply(SCAP, 1, function(x) c(rownames(SCAP)[2],
(x[2])))
get('x')<-1
get('x')
rep(c(1,2,3,4,5), 5)
?rep(c(1,2,3,4,5), 5)
?rep(c(1,2,3,4,5), each=5)
rep(c(1,2,3,4,5), each=5)
trtab<-function(x, col.name){
rows<-rownames(x)
cols<-colnames(x)
col1<-rep(rows, each=length(cols))
col2<-rep(cols, length(rows))
col3<-as.vector(as.matrix(x))
X<-cbind(col1, col2, col3)
colnames(X)<-col.name
}
trtab(SCAP, c('Time', 'Region', 'Exp'))
trtab<-function(x, col.name){
rows<-rownames(x)
cols<-colnames(x)
col1<-rep(rows, each=length(cols))
col2<-rep(cols, length(rows))
col3<-as.vector(as.matrix(x))
X<-cbind(col1, col2, col3)
colnames(X)<-col.name
return(X)
}
trtab(SCAP, c('Time', 'Region', 'Exp'))
?data.frame
trtab<-function(x, col.name){
rows<-rownames(x)
cols<-colnames(x)
col1<-rep(rows, each=length(cols))
col2<-rep(cols, length(rows))
col3<-as.vector(as.matrix(x))
X<-data.frame(cbind(col1, col2, col3), stringsAsFactors = FALSE)
colnames(X)<-col.name
return(X)
}
trtab(SCAP, c('Time', 'Region', 'Exp'))
View(SCAP)
trtab<-function(x, col.name){
rows<-rownames(x)
cols<-colnames(x)
col1<-rep(rows, length(cols))
col2<-rep(cols, each=length(rows))
col3<-as.vector(as.matrix(x))
X<-data.frame(cbind(col1, col2, col3), stringsAsFactors = FALSE)
colnames(X)<-col.name
return(X)
}
trtab(SCAP, c('Time', 'Region', 'Exp'))
trtab<-function(x, col.name){
rows<-rownames(x)
cols<-colnames(x)
col1<-rep(rows, length(cols))
col2<-rep(cols, each=length(rows))
col3<-as.vector(as.matrix(x))
X<-data.frame(cbind(col1, col2, col3), stringsAsFactors = FALSE)
colnames(X)<-col.name
return(X)
}
trtab(SCAP, c('Time', 'Region', 'Exp'))
scap<-trtab(SCAP)
scap<-trtab(SCAP, c('Time', 'Region', 'Exp'))
aov(Exp~Region,data=scap)
summary(aov(Exp~Region,data=scap))
summary(aov(Exp~Region+Time,data=scap))
?aov
summary(aov(Exp~Time,data=scap))
summary(aov(Exp~Region,data=scap))
summary(aov(Exp~Region+Time,data=scap))
summary(aov(Exp~Region+Time,data=scap))
npk
op <- options(contrasts = c("contr.helmert", "contr.poly"))
( npk.aov <- aov(yield ~ block + N*P*K, npk) )
summary(npk.aov)
coefficients(npk.aov)
## to show the effects of re-ordering terms contrast the two fits
aov(yield ~ block + N * P + K, npk)
test<-aov(yield ~ block + N * P + K, npk)
test$coefficients
test$effects
test$rank
test$fitted.values
test$qr
summary(test)
summary(aov(scap))
scap<-trtab(SCAP, c('Time', 'Region', 'Exp'))
summary(aov(Exp~Time+Region ,data=scap))
x <- read.csv("Zinc.csv", as.is=TRUE)  # Run this line without an error
x
t.test(ZINC~GROUP,data = x)
?t.test
t.test(ZINC~GROUP,data = x)
